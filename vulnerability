
import socket
import csv


COMMON_PORTS = {
    21: "FTP",
    22: "SSH",
    80: "HTTP",
    443: "HTTPS",
    3306: "MySQL"
}


RISK_NOTES = {
    "FTP": "Transmits data in plain text. Mitigation: Use SFTP or FTPS.",
    "SSH": "Risk of brute force attacks. Mitigation: Use key-based authentication.",
    "HTTP": "Unencrypted traffic. Mitigation: Use HTTPS.",
    "HTTPS": "Generally secure, but check for weak ciphers. Mitigation: Keep TLS updated.",
    "MySQL": "Database exposure risk. Mitigation: Restrict access, use strong passwords."
}

def scan_ip(ip):
    results = []
    for port, service in COMMON_PORTS.items():
        try:
            sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            sock.settimeout(1)  
            result = sock.connect_ex((ip, port))
            if result == 0:
                results.append((ip, port, service, RISK_NOTES[service]))
            sock.close()
        except Exception as e:
            print(f"Error scanning {ip}:{port} - {e}")
    return results

def save_report(results, filename="vulnerability_report.csv"):
    with open(filename, "w", newline="") as csvfile:
        writer = csv.writer(csvfile)
        writer.writerow(["IP Address", "Port", "Service", "Risk Note"])
        for row in results:
            writer.writerow(row)

if __name__ == "__main__":
    target_ips = ["127.0.0.1", "192.168.1.1", "192.168.1.10"]

    all_results = []
    for ip in target_ips:
        print(f"Scanning {ip}...")
        all_results.extend(scan_ip(ip))

    save_report(all_results)
    print(" Scan complete. Report saved to vulnerability_report.csv")
